{"title":"Merging data frames","markdown":{"yaml":{"title":"Merging data frames","description":"A short description of the post.\n","author":[{"name":"Rodney Dyer","url":"https://dyerlab.org","affiliation":"Center for Environmental Studies","affiliation_url":"https://ces.vcu.edu","orcid_id":"0000-0003-4707-3453"}],"date":"2015-08-27","output":{"distill::distill_article":{"self_contained":false}}},"containsRefs":false,"markdown":"\n\n\n\n\nIn R, there is often the need to merge two <span class=\"lang:default decode:true crayon-inline \">data.frame</span> objects (say one with individual samples and the other with population coordinates.  The <span class=\"lang:default decode:true crayon-inline \">merge()</span>  function is a pretty awesome though it may take a little getting used to.  \nHere are some things to remember:\n\n  1. You need to have two <span class=\"lang:default decode:true crayon-inline \">data.frame</span> objects to merge\n  2. The first one in the function call will be the one merged _on-to _the second one is added to the first.\n  3. Each will need a column to use as an indexâ€”it is a column that will be used to match rows of data.  If they are the same column names then the function will do it automagically, if no common names are found in the <span class=\"lang:default decode:true crayon-inline \">names()</span>  of either <span class=\"lang:default decode:true crayon-inline\">data.frame</span> objects, you can specify the columns using the optional <span class=\"lang:default decode:true crayon-inline \">by.x=</span>  and <span class=\"lang:default decode:true crayon-inline \">by.y=</span>  function arguments.\n\n<!--more-->Here is an example. I'm going to load in some data from the \n\n<span class=\"lang:default decode:true crayon-inline \">popgraph</span>  library.  First, I'll load up the library and hten grab the population meta data for the lophocereus data set we analyzed in [Dyer & Nason (2004)](http://dx.doi.org/10.1111/j.1365-294X.2004.02177.x).\n\n<pre class=\"lang:default decode:true \">require(popgraph)\ndata(baja)\nsummary(baja)\n    Region     Population    Latitude       Longitude     \n Baja  :16   BaC    : 1   Min.   :22.93   Min.   :-114.7  \n Sonora:13   Cabo   : 1   1st Qu.:24.45   1st Qu.:-112.6  \n             CP     : 1   Median :27.95   Median :-111.8  \n             Ctv    : 1   Mean   :27.33   Mean   :-111.8  \n             ELR    : 1   3rd Qu.:29.59   3rd Qu.:-110.7  \n             IC     : 1   Max.   :31.95   Max.   :-109.5  \n             (Other):23                                   \n</pre>\n\nThe graph itself has nodes indicated as populations and perhaps we are interested in plotting node size as a function of spatial location.  We can grab the names and sizes from the <span class=\"lang:default decode:true crayon-inline\">popgraph</span> object (it is a kind of <span class=\"lang:default decode:true crayon-inline \">igraph</span> ) by:\n\n<pre class=\"lang:default decode:true \">data(lopho)\ndf.nodes <- data.frame( Population=V(lopho)$name, Size=V(lopho)$size )\nsummary(df.nodes)\n   Population      Size       \n BaC    : 1   Min.   : 2.500  \n CP     : 1   1st Qu.: 5.291  \n Ctv    : 1   Median : 6.860  \n LaV    : 1   Mean   : 7.770  \n LF     : 1   3rd Qu.:10.925  \n Lig    : 1   Max.   :16.001  \n (Other):15</pre>\n\nNow we have <span class=\"lang:default decode:true crayon-inline\">baja</span>  and <span class=\"lang:default decode:true crayon-inline\">df.nodes</span> as two data.frames and can merge them by their common column \\`Population\\`.  If we merge <span class=\"lang:default decode:true crayon-inline\">df.nodes</span>onto <span class=\"lang:default decode:true crayon-inline \">baja</span>  then we get the new <span class=\"lang:default decode:true crayon-inline\">data.frame</span>:\n\n<pre class=\"lang:default decode:true \">merge( baja, df.nodes )\n   Population Region Latitude Longitude      Size\n1         BaC   Baja    26.59   -111.79 12.158810\n2          CP Sonora    27.95   -110.66  7.870725\n3         Ctv   Baja    29.73   -114.72  3.880886\n4         LaV   Baja    24.04   -109.99  3.533757\n5          LF Sonora    30.68   -112.27  8.472215\n6         Lig   Baja    25.73   -111.27  4.731355\n7          PL Sonora    30.39   -112.58  6.692795\n8         PtC   Baja    24.19   -111.15  4.684652\n9         PtP   Baja    29.03   -113.90 10.925375\n10     SenBas Sonora    31.95   -112.87  9.116705\n11       Seri Sonora    28.88   -111.96  2.500000\n12         SG Sonora    29.40   -112.05 11.027530\n13         SI Sonora    29.75   -112.50 11.521450\n14        SLG   Baja    29.59   -114.40  5.955645\n15         SN Sonora    28.82   -111.80  8.325785\n16        SnE   Baja    24.45   -110.70 11.828220\n17        SnF   Baja    30.76   -114.73  6.325655\n18        SnI   Baja    27.29   -113.02  5.466695\n19        StR   Baja    24.91   -111.62  6.859545\n20         TS Sonora    28.41   -111.37 16.001165\n21        TsS   Baja    23.58   -110.34  5.290570</pre>\n\nbut if we do it the other way, we get:\n\n<pre class=\"lang:default decode:true \">merge(df.nodes,baja)\n   Population      Size Region Latitude Longitude\n1         BaC 12.158810   Baja    26.59   -111.79\n2          CP  7.870725 Sonora    27.95   -110.66\n3         Ctv  3.880886   Baja    29.73   -114.72\n4         LaV  3.533757   Baja    24.04   -109.99\n5          LF  8.472215 Sonora    30.68   -112.27\n6         Lig  4.731355   Baja    25.73   -111.27\n7          PL  6.692795 Sonora    30.39   -112.58\n8         PtC  4.684652   Baja    24.19   -111.15\n9         PtP 10.925375   Baja    29.03   -113.90\n10     SenBas  9.116705 Sonora    31.95   -112.87\n11       Seri  2.500000 Sonora    28.88   -111.96\n12         SG 11.027530 Sonora    29.40   -112.05\n13         SI 11.521450 Sonora    29.75   -112.50\n14        SLG  5.955645   Baja    29.59   -114.40\n15         SN  8.325785 Sonora    28.82   -111.80\n16        SnE 11.828220   Baja    24.45   -110.70\n17        SnF  6.325655   Baja    30.76   -114.73\n18        SnI  5.466695   Baja    27.29   -113.02\n19        StR  6.859545   Baja    24.91   -111.62\n20         TS 16.001165 Sonora    28.41   -111.37\n21        TsS  5.290570   Baja    23.58   -110.34</pre>\n\nHope this helps.\n \n \n \n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":{"distill::distill_article":{"self_contained":false}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"merging-data-frames.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.38","theme":"cosmo","title-block-banner":true,"title":"Merging data frames","description":"A short description of the post.\n","author":[{"name":"Rodney Dyer","url":"https://dyerlab.org","affiliation":"Center for Environmental Studies","affiliation_url":"https://ces.vcu.edu","orcid_id":"0000-0003-4707-3453"}],"date":"2015-08-27"},"extensions":{"book":{"multiFile":true}}}}}