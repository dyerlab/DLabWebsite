{
  "hash": "e6c554be501106ab9007093eb156847c",
  "result": {
    "markdown": "---\ntitle: \"dplyr summarize Warnings\"\ndescription: |\n  A short description of the post.\nauthor:\n  - name: Rodney Dyer\n    url: https://dyerlab.org\n    affiliation: Center for Environmental Studies\n    affiliation_url: https://ces.vcu.edu\n    orcid_id: 0000-0003-4707-3453\ndate: 2021-02-09\nimage: featured.png\n---\n\n\n\nOne of the few annoying things I find with `dplyr` lately is the addition of an experimental option where if you use something like, \n\n```r\ngroup_by(X) %>% \n  summarize( Val = mean(Y))\n``` \n\nit gives you an error message with something like.\n\n> `summarise()` has grouped output by 'X'. You can override using the `.groups` argument.\n\nBut why would I want to 'override' that grouping dplyr::authors?  Didn't I **just set the grouping**?  I would suspect that the majority of use cases are exactly like above (`group_by()` immediately by `summarize()`).  \n\nWhile much of `tidyverse` is too verbose for most of my liking.  I can do without messages like:\n\n![messages on tidyverse startup](featured.png)\n\nWell I finally figured out how to shut the first part up (still working on the second part). \nJust put the following code into your `.Rprofile` file for a global fix, or any code you are using on a per-file basis.\n\n```\noptions( dplyr.summarise.inform = FALSE )\n```\n\nNow if we could just find some way to not have to use `include=FALSE` in the chunk preamble or `suppressPackageStartupMessages(library(dplyr))` just to load in a library without adding a bunch of crap to our markdown files.\n\n\n\n \n \n \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}